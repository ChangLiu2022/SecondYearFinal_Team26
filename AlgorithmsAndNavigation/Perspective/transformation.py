import numpy as np
from scipy.optimize import fsolve

#source of equations: https://math.stackexchange.com/questions/96662/augmented-reality-transformation-matrix-optimization
#chang 07062023

def TransMatrixFinder(x,y):
    def func(h):
        return[
        x[0]*h[0]+y[0]*h[1]+1*h[2]+0*h[3]+0*h[4]+0*h[5]+(-x[0]*((h[0]*x[0]+h[1]*y[0]+h[2])/(h[3]*x[0]+h[4]*y[0]+h[5])))+(-y[0]*((h[0]*x[0]+h[1]*y[0]+h[2])/(h[3]*x[0]+h[4]*y[0]+h[5])))-((h[0]*x[0]+h[1]*y[0]+h[2])/(h[3]*x[0]+h[4]*y[0]+h[5])),
        x[1]*h[0]+y[1]*h[1]+1*h[2]+0*h[3]+0*h[4]+0*h[5]+(-x[1]*((h[0]*x[1]+h[1]*y[1]+h[2])/(h[3]*x[1]+h[4]*y[1]+h[5])))+(-y[1]*((h[0]*x[1]+h[1]*y[1]+h[2])/(h[3]*x[1]+h[4]*y[1]+h[5])))-((h[0]*x[1]+h[1]*y[1]+h[2])/(h[3]*x[1]+h[4]*y[1]+h[5])),
        x[2]*h[0]+y[2]*h[1]+1*h[2]+0*h[3]+0*h[4]+0*h[5]+(-x[2]*((h[0]*x[2]+h[1]*y[2]+h[2])/(h[3]*x[2]+h[4]*y[2]+h[5])))+(-y[2]*((h[0]*x[2]+h[1]*y[2]+h[2])/(h[3]*x[2]+h[4]*y[2]+h[5])))-((h[0]*x[2]+h[1]*y[2]+h[2])/(h[3]*x[2]+h[4]*y[2]+h[5])),
        x[3]*h[0]+y[3]*h[1]+1*h[2]+0*h[3]+0*h[4]+0*h[5]+(-x[3]*((h[0]*x[3]+h[1]*y[3]+h[2])/(h[3]*x[3]+h[4]*y[3]+h[5])))+(-y[3]*((h[0]*x[3]+h[1]*y[3]+h[2])/(h[3]*x[3]+h[4]*y[3]+h[5])))-((h[0]*x[3]+h[1]*y[3]+h[2])/(h[3]*x[3]+h[4]*y[3]+h[5])),
        x[0]*h[3]+y[0]*h[4]+1*h[5]+0*h[0]+0*h[1]+0*h[2]+(-x[0]*((h[3]*x[0]+h[4]*y[0]+h[5])/(h[6]*x[0]+h[7]*y[0]+1)))+(-y[0]*((h[3]*x[0]+h[4]*y[0]+h[5])/(h[6]*x[0]+h[7]*y[0]+1)))-((h[3]*x[0]+h[4]*y[0]+h[5])/(h[6]*x[0]+h[7]*y[0]+1)),
        x[1]*h[3]+y[1]*h[4]+1*h[5]+0*h[0]+0*h[1]+0*h[2]+(-x[1]*((h[3]*x[1]+h[4]*y[1]+h[5])/(h[6]*x[1]+h[7]*y[1]+1)))+(-y[1]*((h[3]*x[1]+h[4]*y[1]+h[5])/(h[6]*x[1]+h[7]*y[1]+1)))-((h[3]*x[1]+h[4]*y[1]+h[5])/(h[6]*x[1]+h[7]*y[1]+1)),
        x[2]*h[3]+y[2]*h[4]+1*h[5]+0*h[0]+0*h[1]+0*h[2]+(-x[2]*((h[3]*x[2]+h[4]*y[2]+h[5])/(h[6]*x[2]+h[7]*y[2]+1)))+(-y[2]*((h[3]*x[2]+h[4]*y[2]+h[5])/(h[6]*x[2]+h[7]*y[2]+1)))-((h[3]*x[2]+h[4]*y[2]+h[5])/(h[6]*x[2]+h[7]*y[2]+1)),
        x[3]*h[3]+y[3]*h[4]+1*h[5]+0*h[0]+0*h[1]+0*h[2]+(-x[3]*((h[3]*x[3]+h[4]*y[3]+h[5])/(h[6]*x[3]+h[7]*y[3]+1)))+(-y[3]*((h[3]*x[3]+h[4]*y[3]+h[5])/(h[6]*x[3]+h[7]*y[3]+1)))-((h[3]*x[3]+h[4]*y[3]+h[5])/(h[6]*x[3]+h[7]*y[3]+1))
        ]
    root = fsolve(func,[0,0,0,0,0,0,0,0])
    return root

print(TransMatrixFinder(x,y))